# 如需在同一Dokcker服务器内创建多个NSMusicsS-Docker版本
    # 请将以下标注为（可修改）的所有字段都修改为不同的值
# If you need to create multiple NSMusicsS-Docker versions within the same Docker server,
    # please modify all the fields marked as (modifiable) to different values.

# ===== 基础配置 | Basic configuration =====
APP_ENV=development
GIN_MODE=release

# ===== 容器命名配置 | Container naming configuration =====
APP_CONTAINER_NAME=nsmusics             # 前端容器名称（可修改）
                                        # Front-end container name (modifiable)
WEB_CONTAINER_NAME=ninesong-go          # 后端容器名称（可修改）: 请保持WEB_CONTAINER_NAME与BACKEND_SERVICE中域名一致
                                        # Back-end container name (modifiable)
MONGO_CONTAINER_NAME=ninesong-mongodb   # 数据库容器名称（可修改）
                                        # Database container name (modifiable)

# ===== 端口配置 | port configuration =====
APP_PORT=5176                               # 前端端口（可修改）
                                            # Front end port (modifiable)
SERVER_PORT=8082                            # 后端端口（可修改）: 请保持SERVER_PORT与SERVER_ADDRESS一致
                                            # Back-end port (modifiable): please keep SERVER_PORT consistent with SERVER_ADDRESS
SERVER_ADDRESS=:8082                        # 后端地址（可修改）: 请保持SERVER_PORT与SERVER_ADDRESS一致
                                            # Back-end address (modifiable): please keep SERVER_PORT consistent with SERVER_ADDRESS
BACKEND_SERVICE=http://ninesong-go:8082     # 前端请求后端地址（可修改）
                                            # Front-end request back-end address (modifiable)
CONTEXT_TIMEOUT=10

# ===== 数据库配置 | Database configuration =====
# windows 本地开发 DB_HOST=localhost
# docker  镜像部署 DB_HOST=mongodb
DB_HOST=localhost       # localhost: local # mongodb: docker
                        # Database host (modifiable)
DB_PORT=27017           # 数据库端口（可修改）
                        # Database port (modifiable)
DB_USER=jiuge01         # 数据库用户名（可修改）：此处请设置高强度字段，简单字段或默认字段容易遭受攻击
                        # Database user name (modifiable): please set high-strength fields here. Simple fields or default fields are vulnerable to attack
DB_PASS=jiuge01         # 数据库用户密码（可修改）：此处请设置高强度字段，简单字段或默认字段容易遭受攻击
                        # Database user password (modifiable): please set high-strength fields here. Simple fields or default fields are vulnerable to attack
DB_NAME=ninesong-go-db

LIBRARY_PATH=/data/library

# ===== 数据路径配置 | Data path configuration =====
# MEDIA_DATA_HOST_PATH=E:/0_Music
MEDIA_DATA_HOST_PATH=/Users/chengxiang/Desktop/0_Music
# 默认仅提供一个媒体文件夹映射参数，如需同时映射多个媒体文件夹参数，请在docker-compose中修改
# 在镜像image: ninesong中volumes里追加配置即可（请勿删除docker-compose中任何参数，只可追加参数）
# By default, only one media folder mapping parameter is provided. If you need to map multiple media folder parameters simultaneously, please modify it in the docker-compose file.
# In the image 'ninesong', you can append configurations in the 'volumes' section of the docker-compose file (please do not delete any existing parameters in docker-compose; only append parameters)
# example：
# A: MEDIA_DATA_HOST_PATH=E:/0_Music；
# B: volumes:
#      - ./.env:/app/.env:ro
#      - ${MEDIA_DATA_HOST_PATH}:/data/library
#      - "E:/0_Music:/data/library"

# ===== Token 配置 | Token configuration =====
ACCESS_TOKEN_EXPIRY_HOUR=2
REFRESH_TOKEN_EXPIRY_HOUR=168
ACCESS_TOKEN_SECRET=access_token_secret
REFRESH_TOKEN_SECRET=refresh_token_secret